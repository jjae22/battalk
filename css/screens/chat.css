@import "components/Anim.css";

.chat_4{
    will-change: transform;
    animation: slit-in-horizontal 0.45s ease-out both;
}
.chat_1{
    will-change: transform;
    animation: slit-in-horizontal 0.9s ease-out both;
}
.chat_2{
    will-change: transform;
    animation: slit-in-horizontal 1.35s ease-out both;

}
.chat_3{
    will-change: transform;
    animation: slit-in-horizontal 1.8s ease-out both;
}

#bg-chat {
    z-index: -1;
    top: 0;
    position: fixed;
    width: 100%;
    height: 100%;
    background-image: url("../../images/chatwallpaper.jpg");
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
}


#chat-screen {
    height: 100vh;
}

#chat-screen .alt-header,
#chat-screen .status-bar {
    top: 0;
    position:fixed;
    width: 100%;
    box-sizing: border-box;
}

#chat-screen .status-bar {
    z-index: 2;
}


#chat-screen .alt-header {
    background-color: rgba(30, 39, 46, 0.5);
    color: white;
    top: 10px;
    z-index: 1;
}

@keyframes fadeIn {
    from {
        transform: translateY(20px);
        opacity: 0;
    }

    to {
        transform: none;
        opacity: 1;
    }
}


.main-chat {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 120px;
    animation: fadeIn .8s linear;
}

.chat__timestamp {
    color:white;
    background-color:#2f3542;
    font-size: 22px;
    padding: 15px;
    border-radius: 25px;
    margin-bottom: 25px;
}

.message-row {
    width: 100%;
    display: flex;
    margin-bottom: 25px;
}

.message-row img {
    width: 50px;
    height: 50px;
    border-radius: 15px;
    margin-right: 10px;
}

.message__author {
    margin-bottom: 5px;
    display: block;
}

.message__info {
    position: relative;
    display: flex;
    align-items: flex-end;
}


.message__bubble {
    font-size: 20px;
    background-color: white;
    padding: 10px;
    border-radius: 15px;
    border-top-left-radius: 0px;
    margin-right: 5px;
}


.message__author,
.message__time {
    color: white;
    font-size: 20px;
}

.message-row--own {
    justify-content: flex-end;
}

.message-row--own .message__bubble {
    background-color: var(--yellow);
    border-top-left-radius: 15px;
    border-top-right-radius: 0px;
    margin-right: 0px;
    margin-left: 5px;
}


.message-row--own .message__info {
    flex-direction: row-reverse;
}

.message__noread {
    position: absolute;
    top: 0;
    right: 0px;
    color: var(--yellow);
    font-size: 20px;
}

.reply {
    position: fixed;
    bottom: 0;
    width: 100%;
    background-color: white;
    display: flex;
    justify-content: space-between;
    padding: 5px 25px;
    box-sizing: border-box;
    align-items: center;
    transition: transform .3s ease-in-out;
}

.reply .reply__column:first-child {
    /* column은 width를 가지고 있지 않았기때문에  width 값을 정해준 후, input의 width값 설정 가능*/
    width: 10%;
}

.reply .reply__column:last-child {
    width: 90%;
    position: relative;
}
.reply input {
    height: 30px;
    padding-left: 10px;
    width: 100%;
    border:var(--main-border);
    border-radius: 20px;
    transition: all .3s ease-in-out;
}


/* 자식결합자 >
.reply__column:last-child > i 는
.reply__column:last-child 를 만족하는 i를 가르킨다.
즉, reply의 마지막 컬럼의 i를 가르키는것.. button 안의 i는 가르키지않는다.
 */
.reply__column:last-child > i,
.reply__column:last-child button {
    position: absolute;
    right: -11px;
    top: 2px;
}

.reply__column:last-child > i {
   right: 40px;
   top: 10px; 
}

.reply i {
    opacity: 0.5;
}

.reply__column button {
    background-color: var(--yellow);
    border: none;
    width:30px;
    height: 30px;
    border-radius: 50%;
}

.reply__column button i{
    opacity: 1;
}

.reply__column button:focus,
.reply__column button:active {
    outline: none;
}


.reply .reply__column:first-child,
.reply .fa-smile-beam,
.reply button {
    transition: opacity .3s ease-in-out;
}


.reply:focus-within .reply__column:first-child,
.reply:focus-within .fa-smile-beam,
.reply:focus-within button {
    opacity: 0;
}

.reply input:focus {
    width: 90vw;
    transform: translateX(-13%) translateY(-80px);
}

.reply:focus-within {
    transform: translateY(80px);
}